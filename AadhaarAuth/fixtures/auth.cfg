
# Configuration for the authentication client 

common: { 
    # mode 
    mode: 'testing',

    # Specific to this AuA
    license_key:  "MKg8njN6O+QRUmYF+TrbBUCqlrCnbN/Ns6hYbnnaOk99e5UGNhhE/xQ=",
    private_key: 'fixtures/public_key.pem',  # note that public refers to
    public_cert: 'fixtures/public_cert.pem', # public AuA 
    pkcs_path: "fixtures/public.p12",
    pkcs_password: "public",
    uid_cert_path: "fixtures/uidai_auth_stage.cer",

    # shared by all 
    encryption_algorithm: 'aes_256_ecb',
    rsa_key_len: 32, 
    sha256_length: 256,    
    auth_url: 'http://auth.uidai.gov.in/1.5/'    
    request_xsd: 'xsd/uid-auth-request.xsd',
    response_xsd: 'xsd/uid-auth-response.xsd'   

}

request: { 
    
    #=> parameters 
    use_template: False, 

    #=> Input data
    command: "generate",
    uid: "123412341234",
    name: "KKKKK", 
    
    xml: "/tmp/request.xml",
    signedxml: "/tmp/request.xml.sig",
    xmlcleanup: False
}

response: { 
    command: "validate",
    xml: "fixtures/authresponse.xml"
}

crypt: {
    command: "test",
    msg: "qwrtttrtyutyyyyy",
    key: "sdkfsdfldfh123213213" 
}

# Configuration for the AuthXML validator
sign: {
    command: 'sign'
    xml: 'fixtures/authrequest.xml',
    signedxml: 'fixtures/authrequest.xml.sig',
}

# Verify the signature in a signed xml
#sign: {
#    command: 'verify'
#    signedxml: 'fixtures/authrequest.xml.sig',
#}


# Configuration for the AuthXML validator
validate: {
    command: 'extract'
    xml: '/tmp/request.xml.sig',
    signed: True, 
}
